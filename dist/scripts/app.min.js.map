{"version":3,"sources":["scripts/app.js","scripts/controllers/gameController.js","scripts/controllers/lineupsController.js","scripts/controllers/main.js","scripts/controllers/rosterController.js","scripts/controllers/settingsController.js","scripts/controllers/teamController.js","scripts/directives/dropdown.js","scripts/directives/lineupTemplates.js","scripts/directives/main.js","scripts/directives/rosterTemplates.js","scripts/filters/main.js","scripts/services/drive.js","scripts/services/main.js"],"names":["window","document","undefined","angular","module","constant","config","$locationProvider","$routeProvider","html5Mode","when","templateUrl","controller","otherwise","redirectTo","localStorageServiceProvider","setPrefix","factory","localStorageService","get","add","player","this","team","push","getPlayer","number","getTeam","playerInfo","console","log","Player","info","replace","split","firstName","lastName","playerNumber","position","$scope","pageClass","lineups","TeamFactory","PlayerFactory","$","show","hide","savedPlayers","savedLineups","players","newEmptyLineup","newLineup","name","leftWing","center","rightWing","defence1","defence2","newLinemember","newPlayer","playerIndex","addLeftWing","index","addRightWing","addCenter","addDefence1","addDefence2","rename","newTitle","$location","version","user","vm","path","bind","mouseOverTimeout","menu","mouseenter","children","setTimeout","mouseleave","clearTimeout","delay","$watch","set","addPlayer","validPlayer","i","parseInt","playerExists","length","alert","addedMessage","removePlayer","removedPlayer","removedMessage","splice","getInfo","charAt","directive","restrict","link","scope","elemeent","attrs","compile","tElement","tAttrs","html","element","filter","obj","Date","slice","readline","require","google","OAuth2","auth","CLIENT_ID","CLIENT_SECRET","REDIRECT_URL","SCOPE","rl","createInterface","input","process","stdin","output","stdout","url","generateAuthUrl","getAccessToken","code","getToken","err","tokens","credentials","upload","drive","files","insert","resource","title","mimeType","media","body","question","provider","$provide","defaults","debug","locale","locales","id","copy","$get"],"mappings":"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","file":"scripts/app.min.js","sourcesContent":["'use strict';\n\nangular.module('HockeyApp', ['ngAnimate', 'ngCookies', 'ngRoute', 'ngDragDrop', 'LocalStorageModule'])\n\n  .constant('version', 'v0.0.1')\n  .constant('user', 'Martin')\n\n  /* Google Drive API Constants */\n  .constant('CLIENT_ID', '1031466315037-mri5opmcirkisus3fllv97q2oakgenfa.apps.googleusercontent.com')\n  .constant('CLIENT_SECRET', 'F22W0vouWOAcKnJdL0gtgOn1')\n  .constant('REDIRECT_URL', 'https://www.example.com/oauth2callback')\n\n  .constant('linupsToDisplay', 4)\n\n  .config(function($locationProvider, $routeProvider) {\n\n    $locationProvider.html5Mode(true);\n\n    $routeProvider\n    .when('/', {\n      templateUrl: 'views/home.html',\n      controller: 'MainCtrl'\n    })\n    .when('/features', {\n      templateUrl: 'views/features.html'\n    })\n    .when('/contact', {\n      templateUrl: 'views/contact.html'\n    })\n    .when('/game', {\n      templateUrl: 'views/game.html',\n      controller: 'gameController',\n    })\n    .when('/roster', {\n      templateUrl: 'views/roster.html',\n      controller: 'rosterController'\n    })\n    .when('/lineups', {\n      templateUrl: 'views/lineups.html',\n      controller: 'lineupsController'\n    })\n    .when('/team', {\n      templateUrl: 'views/team.html',\n      controller: 'teamController'\n    })\n    .when('/settings', {\n      templateUrl: 'views/settings.html',\n      controller: 'settingsController'\n    })\n    .otherwise({\n      redirectTo: '/',\n    });\n\n  })\n\n  .config(['localStorageServiceProvider', function (localStorageServiceProvider) {\n    localStorageServiceProvider.setPrefix('ls');\n  }])\n\n  .factory('TeamFactory', function TeamFactory() {\n    var team = localStorageService.get('players') || [];\n    var team = [];\n\n    return {\n      add: function (player) {\n        this.team.push(player);\n      },\n      getPlayer: function (number) {\n        return this.team[number];\n      },\n\n      getTeam: function() {\n        return this.team;\n      }\n    };\n  })\n\n.factory('PlayerFactory', function (playerInfo) {\n  console.log(\"NEW PLAYER\");\n  var Player =  function () {\n    info = playerInfo.replace(/, /g, '/').replace(/,/g, '/').split('/');\n\n    console.log(info);\n\n    this.firstName      = info[0];\n    this.lastName       = info[1];\n    this.playerNumber   = info[2];\n    this.position       = info[3];\n  };\n  return Player;\n});\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n.controller('gameController', function($scope) {\r\n\r\n\tconsole.log(\"Loaded Game Controller.\");\r\n\r\n\t$scope.pageClass = 'page-game';\r\n\r\n\t$scope.lineups = ['lineup 1','lineup 2','lineup 3','lineup 4','lineup 5','lineup 6'];\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n.controller('lineupsController', ['$scope', 'localStorageService',\r\n\tfunction ($scope, localStorageService, TeamFactory, PlayerFactory) {\r\n\t\tconsole.log('Started lineupsController');\r\n\t\t$('#warning').show();\r\n \t\t$('#danger').hide();\r\n\r\n\t\tvar savedPlayers = localStorageService.get('players');\r\n\t\tvar savedLineups = localStorageService.get('lineups');\r\n\r\n\t\t$scope.players = savedPlayers || [];\r\n\t\t$scope.lineups = savedLineups || [];\r\n\r\n\t\t\r\n\r\n\t\t$scope.newEmptyLineup = function () {;\r\n\t\t\tvar newLineup = {\r\n\t\t\t\tname: \"New Lineup\",\r\n\t\t\t\tleftWing: \"LW\",\r\n\t\t\t\tcenter: \"C\",\r\n\t\t\t\trightWing: \"RW\",\r\n\t\t\t\tdefence1: \"D\",\r\n\t\t\t\tdefence2: \"D\"\r\n\t\t\t};\r\n\t\t\t$scope.lineups.push(newLineup);\r\n\t\t};\r\n\r\n\t\tvar newLinemember;\r\n\r\n\t\t$scope.newPlayer = function (playerIndex) {\r\n\t\t\tconsole.log(playerIndex);\r\n\t\t\tnewLinemember = $scope.players[playerIndex];\r\n\t\t\tconsole.log(newLinemember.firstName);\r\n\t\t};\r\n\r\n\t\t$scope.addLeftWing = function (index) {\r\n\t\t\tconsole.log($scope.lineups[index].leftWing);\r\n\t\t\t$scope.lineups[index].leftWing = newLinemember;\r\n\t\t\tnewLinemember = '';\r\n\t\t};\r\n\r\n\t\t$scope.addRightWing = function (index) {\r\n\t\t\t$scope.lineups[index].rightWing = newLinemember;\r\n\t\t\tnewLinemember = '';\r\n\t\t};\r\n\r\n\t\t$scope.addCenter = function (index) {\r\n\t\t\t$scope.lineups[index].center = newLinemember;\r\n\t\t\tnewLinemember = '';\r\n\t\t};\r\n\r\n\t\t$scope.addDefence1 = function (index) {\r\n\t\t\t$scope.lineups[index].defence1 = newLinemember;\r\n\t\t\tnewLinemember = '';\r\n\t\t};\r\n\r\n\t\t$scope.addDefence2 = function (index) {\r\n\t\t\t$scope.lineups[index].defence2 = newLinemember;\r\n\t\t\tnewLinemember = '';\r\n\t\t};\r\n\r\n\t\t// list of linups\r\n\r\n\t\t// Display all the players on the left in a bar\r\n\t\t// Create a new lineup: LW-C-RW-D-D\r\n\t\t// Allow the user to drag and drop players onto linups (without removing them from the panel)\r\n\t\t// Allow the user to delete linups\r\n\t\t// Allow the user to \"drag and toss\" players in existing lineups (delete)\r\n\t\t// Allow the user to rearrange players within the linups (swapping them)\r\n\t\t// Allow the user to replace players with players outside the lineup\r\n\t\t// Allow the user to rearrange players between the linups (swapping them)\r\n\r\n\t\t$scope.rename = function(index) {\r\n\t\t\tconsole.log($scope.newTitle);\r\n\r\n\t\t\tif ($scope.newTitle)\r\n\t\t\t{\r\n\t\t\t\t$scope.lineups[index].name = $scope.newTitle;\r\n\r\n\t\t\t\tconsole.log($scope.lineups[index].name);\r\n\t\t\t}\r\n\r\n\t\t\t$scope.newTitle = '';\r\n\t\t};\r\n\r\n\r\n\r\n\t\tconsole.log('Ended lineupsController');\r\n\t\t$('#success').show();\r\n\t\t$('#warning').hide();\r\n\r\n\t}]);\r\n","'use strict';\n\nangular.module('HockeyApp')\n\n.controller('MainCtrl', function($location, version, user) {\n\n\tvar vm = this;\n\tvm.path = $location.path.bind($location);\n\tvm.version = version;\n\tvm.user = user;\n\n\n\t/* Dropdown menu interaction */\n\tvar mouseOverTimeout;\n\tvar menu;\n\t$('.dropdown').mouseenter(function() {\n\n\t\tmenu = $(this).children('.dropdown-menu');\n\t\tmouseOverTimeout = setTimeout(function() {\n        menu.show(400);\n\n    }, 400);\n\t}).mouseleave(function() {\n\t\tclearTimeout(mouseOverTimeout);\n\t\tmenu.delay(400).hide(300);\n\t});\n\n});\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n.controller('rosterPageController', function($scope) {\r\n\r\n\tconsole.log(\"Loaded Roster Controller.\");\r\n\r\n\t$scope.pageClass = 'page-roster';\r\n})\r\n\r\n.controller('rosterController', ['$scope', 'localStorageService',\r\n\tfunction ($scope, localStorageService, TeamFactory, PlayerFactory) {\r\n\t\t\r\n \t\t// Initialization\r\n \t\tconsole.log('Started controller roster');\r\n \t\t$('#warning').show();\r\n \t\t$('#danger').hide();\r\n\r\n \t\tvar savedPlayers = localStorageService.get('players');\r\n\r\n \t\t$scope.players = savedPlayers || [];\r\n\r\n \t\t$scope.$watch('players', function () {\r\n \t\t\tlocalStorageService.set('players', $scope.players);\r\n \t\t}, true);\r\n\r\n \t\t// Method to add new players\r\n \t\t$scope.addPlayer = function() {\r\n \t\t\tif ($scope.playerInfo) {\r\n \t\t\t\t//TODO: NEED TO ESCAPE SEQUENCE\r\n \t\t\t\tvar info = $scope.playerInfo.replace(/, /g, '/').replace(/,/g, '/').split('/');\r\n\r\n \t\t\t\tvar validPlayer = true;\r\n\r\n \t\t\t\tfor (var i = 3; i >= 0; i--) {\r\n \t\t\t\t\tif(!info[i]) {\r\n \t\t\t\t\t\tvalidPlayer = false;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n\r\n \t\t\t\tvar newPlayer = {\r\n \t\t\t\t\tfirstName:      info[0],\r\n \t\t\t\t\tlastName:       info[1],\r\n \t\t\t\t\tplayerNumber:   parseInt(info[2]),\r\n \t\t\t\t\tposition:       info[3],\r\n \t\t\t\t};\r\n\r\n \t\t\t\tvar playerExists = false;\r\n\r\n \t\t\t\tfor (var i = $scope.players.length - 1; i >= 0; i--) {\r\n \t\t\t\t\tif ($scope.players[i].lastName === newPlayer.lastName && $scope.players[i].firstName === newPlayer.firstName) {\r\n \t\t\t\t\t\tplayerExists = true;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n\r\n \t\t\t\tif (!validPlayer || playerExists) {\r\n \t\t\t\t\t!validPlayer ? alert(\"Invalid Entry.\") : alert(\"The player already exists on the roster.\");\r\n \t\t\t\t} \r\n\r\n \t\t\t\telse {\r\n \t\t\t\t\t$scope.players.push(newPlayer);\r\n \t\t\t\t\tvar addedMessage = 'Added ' + newPlayer.firstName + ' ' + newPlayer.lastName;\r\n \t\t\t\t\tconsole.log(addedMessage);\r\n \t\t\t\t}\r\n\r\n \t\t\t\t$scope.playerInfo = '';\r\n \t\t\t\t//TODO: Order by playerNumber on insert\r\n \t\t\t\t//TODO: Modify alerts to be less intrusive\r\n \t\t\t}\r\n \t\t};\r\n\r\n\t\t$scope.removePlayer = function (index) {\r\n\t\t\tvar removedPlayer = $scope.players[index];\r\n\t\t\tvar removedMessage = 'Removed ' + removedPlayer.firstName + ' ' + removedPlayer.lastName;\r\n\t\t\t\r\n\t\t\t$scope.players.splice(index, 1);\r\n\t\t\t\r\n\t\t\tconsole.log(removedMessage);\r\n \t\t\t/*for (var i = $scope.players.length - 1; i >= 0; i--) {\r\n\t\t\t\tif ($scope.players[i].lastName === lastName && $scope.players[i].firstName === firstName) {\r\n\t\t\t\t\tplayerExists = true;\r\n\t\t\t\t}\r\n\t\t\t};*/\r\n\t\t};\r\n\r\n\t\t$scope.getInfo = function (index) {\r\n\t\t\tvar player = $scope.players[index];\r\n\t\t\treturn \"#\" + player.playerNumber + \" \" + player.firstName.charAt(0) + \".\" + player.lastName + \": \" + player.position;\r\n\t\t};\r\n\r\n\t\tconsole.log('Ended controller roster');\r\n\t\t$('#success').show();\r\n\t\t$('#warning').hide();\r\n\r\n\t\t/* Ensure that the players can be ordered by number\r\n\t\tangular.forEach($scope.players, function (player) {\r\n\t\t\tplayer.playerNumber = parseFloat(player.playerNumber);\r\n\t\t\tconsole.log(player.playerNumber);\r\n\t\t});*/\r\n\r\n\t}]);\r\n\r\n//TODO Figure out how to redefine the controller like in the Ang. Tut.\r\n//Martin, Kilonzo, 88, Defense\r\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n  .controller('settingsController', function($scope) {\r\n\r\n  \tconsole.log(\"Loaded Settings Controller.\");\r\n\r\n  \t$scope.pageClass = 'page-settings';\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n  .controller('teamController', function($scope) {\r\n\r\n  \tconsole.log(\"Loaded Team Controller.\");\r\n\r\n  \t$scope.pageClass = 'page-team';\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n.directive('showDropdown', function() {\r\n\r\n\treturn {\r\n\t\trestrict: 'EAC',\r\n\t\tlink : function(scope, elemeent, attrs) {\r\n\r\n\t\t\t/* Dropdown menu interaction; Convert to Angular\r\n\t\t\tvar mouseOverTimeout;\r\n\t\t\tvar menu;\r\n\t\t\t$('.dropdown').mouseenter(function() {\r\n\r\n\t\t\t\tmenu = $(this).children('.dropdown-menu');\r\n\t\t\t\tmouseOverTimeout = setTimeout(function() {\r\n\t\t\t\t\tmenu.show(400);\r\n\r\n\t\t\t\t}, 400);\r\n\t\t\t}).mouseleave(function() {\r\n\t\t\t\tclearTimeout(mouseOverTimeout);\r\n\t\t\t\tmenu.delay(400).hide(300);\r\n\t\t\t});*/\r\n\t\t}\r\n\t};\r\n});\r\n\r\n\r\n\r\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n\t.directive('lineupTemplate', function() {\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\ttemplateUrl: 'views/partials/lineup-template.html'\r\n\t\t};\r\n\t})\r\n\r\n\t.directive('lineupPlayerPool', function() {\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\ttemplateUrl: 'views/partials/lineup-player-pool.html'\r\n\t\t};\r\n\t});","'use strict';\n\nangular.module('HockeyApp')\n\n  .directive('ngHelloWorld', function() {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function compile(tElement, tAttrs) {\n        tElement.html('<span>hello {{name}}</span>');\n        return function postLink(scope, element, attrs, controller) {\n          scope.name = 'world';\n        };\n      }\n    };\n\n  });\n","'use strict';\r\n\r\nangular.module('HockeyApp')\r\n\r\n\t.directive('rosterPlayer', function () {\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\ttemplateUrl: 'views/partials/roster-player.html'\r\n\t\t};\r\n\t})\r\n\r\n\t.directive('rosterInput', function () {\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\ttemplateUrl: 'views/partials/roster-input.html'\r\n\t\t}\r\n\t});","'use strict';\n\nangular.module('HockeyApp')\n\n  .filter('time', function() {\n    return function(obj) {\n      return +new Date(obj);\n    };\n  })\n\n  .filter('startFrom', function() {\n    return function(obj, index) {\n      return obj && obj.slice(index);\n    };\n  });\n","var readline = require('readline');\r\nvar google = require('googleapis');\r\nvar OAuth2 = google.auth.OAuth2;\r\n\r\n/*var CLIENT_ID = main.CLIENT_ID,\r\nCLIENT_SECRET = main.CLIENT_SECRET,\r\nREDIRECT_URL = main.REDIRECT_URL,\r\nSCOPE = 'https://www.googleapis.com/auth/drive.file';*/\r\n\r\nvar CLIENT_ID = '1031466315037-mri5opmcirkisus3fllv97q2oakgenfa.apps.googleusercontent.com',\r\nCLIENT_SECRET = '7zF3DHS0Zr8b57LowYlxXYAj',\r\nREDIRECT_URL = 'http://localhost:9000',\r\n//REDIRECT_URL = 'http://localhost:9000/oauth2callback',\r\nSCOPE = 'https://www.googleapis.com/auth/drive.file';\r\n\r\nvar rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout\r\n});\r\n\r\nvar auth = new OAuth2(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);\r\n\r\nvar url = auth.generateAuthUrl({ scope: SCOPE });\r\nvar getAccessToken = function(code) {\r\n  auth.getToken(code, function(err, tokens) {\r\n    if (err) {\r\n      console.log('Error while trying to retrieve access token', err);\r\n      return;\r\n    }\r\n    auth.credentials = tokens;\r\n    upload();\r\n  });\r\n};\r\nvar upload = function() {\r\n  var drive = google.drive({ version: 'v2', auth: auth });\r\n  drive.files.insert({\r\n    resource: {\r\n      title: 'My Document',\r\n      mimeType: 'text/plain'\r\n    },\r\n    media: {\r\n      mimeType: 'text/plain',\r\n      body: 'Hello World!'\r\n    }\r\n  }, console.log);\r\n};\r\nconsole.log('Visit the url: ', url);\r\nrl.question('Enter the code here:', getAccessToken);","'use strict';\n\nangular.module('HockeyApp')\n\n.provider('config', function($provide, version) {\n\n  var defaults = this.defaults = {\n    debug: false,\n    version: version,\n    locale: 'en_US',\n    locales: [\n      {\n        id: 'en_US',\n        name: 'English'\n      },\n      {\n        id: 'fr_FR',\n        name: 'French'\n      }\n    ]\n  };\n  var config = this.config = angular.copy(defaults);\n\n  // var request = new XMLHttpRequest();\n  // request.open('GET', 'config/config.json', false);\n  // request.send(null);\n  // if (request.status === 200) {\n  //   angular.extend(config, JSON.parse(request.responseText));\n  // }\n\n  $provide.constant('$version', config.version);\n\n  this.$get = function() {\n    return config;\n  };\n\n});\n"],"sourceRoot":"/source/"}